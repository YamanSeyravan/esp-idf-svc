(function() {var implementors = {
"embedded_io":[],
"embedded_svc":[["impl&lt;B, R&gt; <a class=\"trait\" href=\"embedded_svc/io/blocking/trait.Read.html\" title=\"trait embedded_svc::io::blocking::Read\">Read</a> for <a class=\"struct\" href=\"embedded_svc/executor/asynch/struct.RawBlocking.html\" title=\"struct embedded_svc::executor::asynch::RawBlocking\">RawBlocking</a>&lt;B, R&gt;<span class=\"where fmt-newline\">where\n    B: <a class=\"trait\" href=\"embedded_svc/executor/asynch/trait.Blocker.html\" title=\"trait embedded_svc::executor::asynch::Blocker\">Blocker</a>,\n    R: <a class=\"trait\" href=\"embedded_svc/io/asynch/trait.Read.html\" title=\"trait embedded_svc::io::asynch::Read\">Read</a>,</span>"],["impl&lt;B, C&gt; <a class=\"trait\" href=\"embedded_svc/io/blocking/trait.Read.html\" title=\"trait embedded_svc::io::blocking::Read\">Read</a> for <a class=\"struct\" href=\"embedded_svc/http/client/asynch/struct.BlockingConnection.html\" title=\"struct embedded_svc::http::client::asynch::BlockingConnection\">BlockingConnection</a>&lt;B, C&gt;<span class=\"where fmt-newline\">where\n    B: <a class=\"trait\" href=\"embedded_svc/executor/asynch/trait.Blocker.html\" title=\"trait embedded_svc::executor::asynch::Blocker\">Blocker</a>,\n    C: <a class=\"trait\" href=\"embedded_svc/http/client/asynch/trait.Connection.html\" title=\"trait embedded_svc::http::client::asynch::Connection\">Connection</a>,</span>"],["impl&lt;C&gt; <a class=\"trait\" href=\"embedded_svc/io/blocking/trait.Read.html\" title=\"trait embedded_svc::io::blocking::Read\">Read</a> for <a class=\"struct\" href=\"embedded_svc/http/client/struct.Response.html\" title=\"struct embedded_svc::http::client::Response\">Response</a>&lt;C&gt;<span class=\"where fmt-newline\">where\n    C: <a class=\"trait\" href=\"embedded_svc/http/client/trait.Connection.html\" title=\"trait embedded_svc::http::client::Connection\">Connection</a>,</span>"],["impl&lt;C&gt; <a class=\"trait\" href=\"embedded_svc/io/blocking/trait.Read.html\" title=\"trait embedded_svc::io::blocking::Read\">Read</a> for <a class=\"struct\" href=\"embedded_svc/http/server/struct.Request.html\" title=\"struct embedded_svc::http::server::Request\">Request</a>&lt;C&gt;<span class=\"where fmt-newline\">where\n    C: <a class=\"trait\" href=\"embedded_svc/http/server/trait.Connection.html\" title=\"trait embedded_svc::http::server::Connection\">Connection</a>,</span>"],["impl&lt;B, R&gt; <a class=\"trait\" href=\"embedded_svc/io/blocking/trait.Read.html\" title=\"trait embedded_svc::io::blocking::Read\">Read</a> for <a class=\"struct\" href=\"embedded_svc/executor/asynch/struct.Blocking.html\" title=\"struct embedded_svc::executor::asynch::Blocking\">Blocking</a>&lt;B, R&gt;<span class=\"where fmt-newline\">where\n    B: <a class=\"trait\" href=\"embedded_svc/executor/asynch/trait.Blocker.html\" title=\"trait embedded_svc::executor::asynch::Blocker\">Blocker</a>,\n    R: <a class=\"trait\" href=\"embedded_svc/io/asynch/trait.Read.html\" title=\"trait embedded_svc::io::asynch::Read\">Read</a>,</span>"],["impl&lt;B, C&gt; <a class=\"trait\" href=\"embedded_svc/io/blocking/trait.Read.html\" title=\"trait embedded_svc::io::blocking::Read\">Read</a> for <a class=\"struct\" href=\"embedded_svc/http/server/asynch/struct.BlockingConnection.html\" title=\"struct embedded_svc::http::server::asynch::BlockingConnection\">BlockingConnection</a>&lt;B, C&gt;<span class=\"where fmt-newline\">where\n    B: <a class=\"trait\" href=\"embedded_svc/executor/asynch/trait.Blocker.html\" title=\"trait embedded_svc::executor::asynch::Blocker\">Blocker</a>,\n    C: <a class=\"trait\" href=\"embedded_svc/http/server/asynch/trait.Connection.html\" title=\"trait embedded_svc::http::server::asynch::Connection\">Connection</a>,</span>"]],
"esp_idf_svc":[["impl&lt;'a&gt; <a class=\"trait\" href=\"embedded_io/blocking/trait.Read.html\" title=\"trait embedded_io::blocking::Read\">Read</a> for <a class=\"struct\" href=\"esp_idf_svc/http/server/struct.EspHttpConnection.html\" title=\"struct esp_idf_svc::http::server::EspHttpConnection\">EspHttpConnection</a>&lt;'a&gt;"],["impl&lt;'a&gt; <a class=\"trait\" href=\"embedded_io/blocking/trait.Read.html\" title=\"trait embedded_io::blocking::Read\">Read</a> for <a class=\"struct\" href=\"esp_idf_svc/http/server/struct.EspHttpRequest.html\" title=\"struct esp_idf_svc::http::server::EspHttpRequest\">EspHttpRequest</a>&lt;'a&gt;"],["impl <a class=\"trait\" href=\"embedded_io/blocking/trait.Read.html\" title=\"trait embedded_io::blocking::Read\">Read</a> for <a class=\"struct\" href=\"esp_idf_svc/http/client/struct.EspHttpConnection.html\" title=\"struct esp_idf_svc::http::client::EspHttpConnection\">EspHttpConnection</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()